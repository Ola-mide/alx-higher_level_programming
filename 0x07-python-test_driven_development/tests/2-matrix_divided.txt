>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 10))
[[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]]
>>> print(matrix_divided([[1, "School", 3], [4, 5, 6]], 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (List of lists) of integer/floats
>>> print(matrix_divided([[1, 2, 3], [4, 5]], 3))
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], "hello"))
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 0))
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> print(matrix_divided(None))
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> print(matrix_divided())
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
